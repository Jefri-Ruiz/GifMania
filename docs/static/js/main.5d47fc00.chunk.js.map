{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEwCC,UAAWH,GAFnD,+DAGGI,MAAMF,GAHT,cAGTG,EAHS,gBAIMA,EAAIC,OAJV,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAcRM,GAdQ,4CAAH,sDCcLO,EAbK,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAI3B,OAEI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCwBDO,EA5BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAM,SAAAC,GAEpBC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAGR,CAACpB,IAGGqB,EDnBwBM,CAAa3B,GAAhCa,EAFgB,EAErBN,KAAaa,EAFQ,EAERA,QAEpB,OACI,qCACA,6BAAMpB,IAELoB,GAAW,4CAEZ,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfpBiB,EAAe,WAAM,MAGE1C,mBAAS,CAAC,UAHZ,mBAG3B2C,EAH2B,KAGf5C,EAHe,KAW9B,OACI,qCACI,kEACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BACM4C,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCnB7B8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.5d47fc00.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // trim sirve para borrar los espacios en blanco antes y despues\r\n        if (inputValue.trim().length > 2) {\r\n            // como no pase categories en props puedo hacerle referencia de la siguiente forma\r\n            setCategories(cats =>[ inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=NY4EQmCtMKMx4Vy9gsrWRjm0eUU5Nr2L`;\r\n        const res = await fetch(url);\r\n        const {data} = await res.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nconst GifGridItem = ( { title, url} ) => {\r\n\r\n    /* console.log({id, title, url}); */\r\n\r\n    return (\r\n\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nimport GifGridItem from './GifGridItem' \r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 >{category}</h3>\r\n        \r\n        {loading && <p>Cargando...</p> }\r\n        \r\n        <div className=\"card-grid\">\r\n\r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem\r\n                        key={img.id} \r\n                        {...img}\r\n                        \r\n                    />\r\n                ))\r\n            }    \r\n        \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        getGifs(category).then( imgs => {\r\n\r\n            setTimeout(() => {\r\n                \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                \r\n            }, 3000);\r\n            \r\n        });\r\n    }, [category]); \r\n\r\n\r\n    return state;\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nimport {AddCategory} from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    /* const categories = ['One punch', 'Samurai X', 'Dragon Ball']; */\r\nconst [categories, setCategories] = useState(['funny']);\r\n\r\n /*    const handleApp = () =>{\r\n        setCategories([...categories , 'snk'])\r\n        // tambien se puede optar por\r\n        // setCategories{cats => [...cats, 'HunterXHunter]}\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>Ingresa el tema para buscar gifs</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                { categories.map( category => (\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}